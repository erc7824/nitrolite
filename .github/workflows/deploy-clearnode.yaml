name: Deploy Clearnode

on:
  workflow_call:
    inputs:
      target-env:
        description: 'Environment to deploy to (e.g., sandbox, uat, prod)'
        required: true
        type: string
      image-tag:
        description: 'Docker image tag to deploy'
        required: true
        type: string
    secrets:
      gke-project:
        description: 'GKE project ID'
        required: true
      gke-sa-key:
        description: 'GKE service account key'
        required: true

jobs:
  deploy:
    name: Deploy Clearnode
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      PROJECT_ID: ${{ secrets.gke-project }}
      GKE_CLUSTER_NAME: uat
      GKE_CLUSTER_ZONE: europe-central2
      GKE_BASTION_NAME: gke-uat-bastion
      GKE_BASTION_ZONE: europe-central2-a
      HELM_NAMESPACE: 'clearnet-${{ inputs.target-env }}'
      HELM_RELEASE: clearnode
      HELM_CONFIG_ENV: '${{ inputs.target-env }}'
      KUBECONFIG: kubeconfig.conf

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.gke-sa-key }}'

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.gke-project }}
        install_components: gke-gcloud-auth-plugin

    - name: Get GKE credentials
      run: |-
        gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} \
          --project ${PROJECT_ID} \
          --zone ${GKE_CLUSTER_ZONE} \
          --internal-ip

    - name: Port-forward to GKE Bastion
      run: |-
        gcloud compute ssh ${GKE_BASTION_NAME} \
          --tunnel-through-iap \
          --project ${PROJECT_ID} \
          --zone ${GKE_BASTION_ZONE} \
          --ssh-key-expiration=600s \
          -- -NL8888:127.0.0.1:8888 &
        sleep 5

    - name: Install Helm
      uses: azure/setup-helm@v4

    - name: Release
      env:
        HTTPS_PROXY: http://localhost:8888
      run: |-
        helm upgrade -i ${HELM_RELEASE} clearnode/chart \
          -n ${HELM_NAMESPACE} \
          --reuse-values \
          -f clearnode/chart/config/${HELM_CONFIG_ENV}/clearnode.yaml \
          --set image.tag="${{ inputs.image-tag }}"
