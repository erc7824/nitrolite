name: PR on main branch

on:
  pull_request:
    branches: [ main ]

jobs:
  test-clearnode:
    name: Test (Clearnode)

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Test
        run: go test -v ./...
        working-directory: clearnode

  build-and-publish-clearnode:
    name: Build and Publish (Clearnode)
    needs: test-clearnode
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: clearnode
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/clearnode:${{ steps.sha.outputs.short_sha }}

  notify-slack:
    name: Notify Slack
    runs-on: ubuntu-latest
    needs: [test-clearnode, build-and-publish-clearnode]
    if: always()
    
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: clearnet
          SLACK_USERNAME: CI/CD Bot
          SLACK_COLOR: ${{ contains(needs.*.result, 'failure') && 'failure' || contains(needs.*.result, 'cancelled') && 'cancelled' || 'success' }}
          SLACK_TITLE: 'Nitrolite PR Build'
          SLACK_MESSAGE_ON_SUCCESS: '✅ PR build and tests completed successfully!'
          SLACK_MESSAGE_ON_FAILURE: '❌ PR build or tests failed!'
          SLACK_MESSAGE_ON_CANCEL: '⚠️ PR build or tests were cancelled!'
          SLACK_FOOTER: 'Nitrolite CI/CD Pipeline'
