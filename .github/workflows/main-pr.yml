name: PR on main branch

on:
  pull_request:
    branches: [ main ]

jobs:
  test-clearnode:
    name: Test (Clearnode)
    uses: ./.github/workflows/test-go.yml
    with:
      project-path: 'clearnode'
      project-name: 'Clearnode'

  test-forge:
    name: Test (Foundry)
    uses: ./.github/workflows/test-forge.yml
    with:
      project-path: 'contract'
      project-name: 'Foundry'

  test-sdk:
    name: Test (SDK)
    uses: ./.github/workflows/test-sdk.yml
    with:
      project-path: 'sdk'
      project-name: 'SDK'

  test-examples:
    name: Test Examples Compilation
    uses: ./.github/workflows/build-node-project.yml
    strategy:
      matrix:
        include:
          - path: examples/snake/client
            name: Snake Client
          - path: examples/snake/server
            name: Snake Server
          - path: examples/tictactoe/client
            name: Tic Tac Toe Client
          # NOTE: TicTacToe does not require to be compiled,
          #       still it's present here just to make sure all
          #       components of example apps are listed.
          # - path: examples/tictactoe/server
          #   name: Tic Tac Toe Server
    with:
      project-path: ${{ matrix.path }}
      project-name: ${{ matrix.name }}

  build-and-publish-clearnode:
    name: Build and Publish (Clearnode)
    needs: test-clearnode
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: clearnode
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/clearnode:${{ steps.sha.outputs.short_sha }}

