name: PR on main branch

on:
  pull_request:
    branches: [ main ]

jobs:
  test-clearnode:
    name: Test (Clearnode)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'clearnode/go.mod'
          cache: true
          cache-dependency-path: 'clearnode/go.sum'

      - name: Test
        run: go test -v ./...
        working-directory: clearnode

  test-forge:
    name: Test (Foundry)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      FOUNDRY_PROFILE: ci
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Show Forge version
        run: forge --version

      - name: Run Forge fmt
        run: forge fmt --check
        working-directory: contract
        id: fmt

      - name: Run Forge build
        run: forge build --sizes
        working-directory: contract
        id: build

      - name: Run Forge tests
        run: forge test -vvv
        working-directory: contract
        id: test

  test-sdk:
    name: Test (SDK)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'sdk/package.json'
          cache: 'npm'
          cache-dependency-path: 'sdk/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: sdk

      - name: Run tests
        run: npm test
        working-directory: sdk

  test-examples:
    name: Test Examples Compilation
    uses: ./.github/workflows/build-node-project.yml
    strategy:
      matrix:
        include:
          - path: examples/snake/client
            name: Snake Client
          - path: examples/snake/server
            name: Snake Server
          - path: examples/tictactoe/client
            name: Tic Tac Toe Client
          # NOTE: TicTacToe does not require to be compiled,
          #       still it's present here just to make sure all
          #       components of example apps are listed.
          # - path: examples/tictactoe/server
          #   name: Tic Tac Toe Server
    with:
      project-path: ${{ matrix.path }}
      project-name: ${{ matrix.name }}

  build-and-publish-clearnode:
    name: Build and Publish (Clearnode)
    needs: test-clearnode
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: clearnode
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/clearnode:${{ steps.sha.outputs.short_sha }}

