name: Stable Tag

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-and-publish-clearnode:
    name: Build and Publish (Clearnode)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.tagger.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag name without 'v' prefix
        id: tagger
        run: echo "tag=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: clearnode
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/clearnode:${{ steps.tagger.outputs.tag }}
            ghcr.io/${{ github.repository }}/clearnode:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-sandbox:
    name: Deploy to Sandbox
    needs: build-and-publish-clearnode
    uses: ./.github/workflows/deploy-clearnode.yaml
    with:
      target-env: sandbox
      image-tag: ${{ needs.build-and-publish-clearnode.outputs.image-tag }}
    secrets:
      gke-project: ${{ secrets.GKE_PROJECT }}
      gke-sa-key: ${{ secrets.GKE_SANDBOX_SA_KEY }}

  deploy-prod:
    name: Deploy to Production
    needs: build-and-publish-clearnode
    uses: ./.github/workflows/deploy-clearnode.yaml
    with:
      target-env: prod
      image-tag: ${{ needs.build-and-publish-clearnode.outputs.image-tag }}
    secrets:
      gke-project: ${{ secrets.GKE_PROJECT }}
      gke-sa-key: ${{ secrets.GKE_PROD_SA_KEY }}

  notify-slack:
    name: Notify Slack
    runs-on: ubuntu-latest
    needs: [build-and-publish-clearnode, deploy-sandbox, deploy-prod]
    if: always()

    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: deployments
          SLACK_USERNAME: CI/CD Bot
          SLACK_COLOR: ${{ contains(needs.*.result, 'failure') && 'failure' || contains(needs.*.result, 'cancelled') && 'cancelled' || 'success' }}
          SLACK_ICON_EMOJI: ${{ contains(needs.*.result, 'failure') && ':x:' || contains(needs.*.result, 'cancelled') && ':warning:' || ':white_check_mark:' }}
          SLACK_TITLE: 'Nitrolite Clearnode Production Release'
          SLACK_MESSAGE_ON_SUCCESS: |
            ✅ Stable build and deployment completed successfully!
            ${{github.event.head_commit.message}}
          SLACK_MESSAGE_ON_FAILURE: |
            ❌ Stable build or deployment failed!
            ${{github.event.head_commit.message}}
          SLACK_MESSAGE_ON_CANCEL: |
            ⚠️ Stable build or deployment was cancelled!
            ${{github.event.head_commit.message}}
          SLACK_FOOTER: 'Nitrolite CI/CD Pipeline'
