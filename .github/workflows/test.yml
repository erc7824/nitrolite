name: SDK Non-Regression Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: nightly
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-deps-
    
    - name: Install contract dependencies
      working-directory: ./contract
      run: |
        forge install
        forge build
    
    - name: Install SDK dependencies
      working-directory: ./sdk
      run: npm ci
    
    - name: Build SDK
      working-directory: ./sdk
      run: npm run build
    
    - name: Lint SDK
      working-directory: ./sdk
      run: npm run lint
    
    - name: Type check SDK
      working-directory: ./sdk
      run: npm run typecheck
    
    - name: Run unit tests
      working-directory: ./sdk
      run: npm run test:coverage
    
    - name: Start Anvil
      run: |
        anvil --port 8545 --host 0.0.0.0 --accounts 10 --balance 10000 &
        sleep 5
    
    - name: Deploy contracts to local network
      working-directory: ./contract
      run: |
        forge script script/Deploy.s.sol --rpc-url http://localhost:8545 --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 --broadcast
    
    - name: Run integration tests
      working-directory: ./sdk
      run: npm run test:integration:coverage
      env:
        ANVIL_RPC_URL: http://localhost:8545
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./sdk/coverage/lcov.info
        fail_ci_if_error: true

  golang-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: nightly
    
    - name: Build contracts
      working-directory: ./contract
      run: |
        forge install
        forge build
    
    - name: Start Anvil
      run: |
        anvil --port 8545 --host 0.0.0.0 --accounts 10 --balance 10000 &
        sleep 5
    
    - name: Deploy contracts to local network
      working-directory: ./contract
      run: |
        forge script script/Deploy.s.sol --rpc-url http://localhost:8545 --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 --broadcast
    
    - name: Run Go tests
      working-directory: ./clearnode
      run: |
        go mod download
        go test -v -race -coverprofile=coverage.out ./...
      env:
        ETH_RPC_URL: http://localhost:8545
    
    - name: Upload Go coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./clearnode/coverage.out
        fail_ci_if_error: true
